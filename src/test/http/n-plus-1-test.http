### N+1 문제 해결 단계별 테스트
### 기본 URL 설정
@baseUrl = http://localhost:8080

### ================================================================
### 0단계: 기본 데이터 확인
### ================================================================

### 현재 샘플 데이터 상태 조회
GET {{baseUrl}}/api/sample-data

###

### ================================================================
### 1단계: N+1 문제 재현 테스트
### ================================================================

### 1-1. N+1 문제 재현 - 소규모 (5개)
POST {{baseUrl}}/api/nplus1-test/problem?count=5
Content-Type: application/json

###

### 1-2. N+1 문제 재현 - 중간 규모 (10개)
POST {{baseUrl}}/api/nplus1-test/problem?count=10
Content-Type: application/json

###

### 1-3. 주문 조회에서 N+1 문제 재현
GET {{baseUrl}}/api/nplus1-test/retrieve-problem

###

### ================================================================
### 2단계: LAZY 로딩 테스트 (현재 적용됨)
### ================================================================

### 2-1. LAZY 로딩으로 주문 생성
POST {{baseUrl}}/api/nplus1-test/lazy-loading?count=5
Content-Type: application/json

###

### ================================================================
### 3단계: @EntityGraph 최적화 조회 테스트
### ================================================================

### 3-1. @EntityGraph로 최적화된 조회
GET {{baseUrl}}/api/nplus1-test/entity-graph

###

### ================================================================
### 4단계: 배치 조회 테스트 (@BatchSize 활용)
### ================================================================

### 4-1. 배치 조회로 주문 생성
POST {{baseUrl}}/api/nplus1-test/batch-fetch?count=5
Content-Type: application/json

###

### ================================================================
### 5단계: JOIN FETCH 최적화 조회 테스트
### ================================================================

### 5-1. JOIN FETCH로 최적화된 조회 (2단계)
GET {{baseUrl}}/api/nplus1-test/join-fetch

###

### 5-2. 간단한 JOIN FETCH로 최적화된 조회 (1단계)
GET {{baseUrl}}/api/nplus1-test/simple-join-fetch

###

### ================================================================
### 성능 비교 테스트
### ================================================================

### 조회 방법별 전체 성능 비교 (기본 vs EntityGraph vs JOIN FETCH)
GET {{baseUrl}}/api/nplus1-test/compare-retrieval

###

### 생성 방법별 전체 성능 비교 (N+1 vs LAZY vs Batch)
POST {{baseUrl}}/api/nplus1-test/compare-all?count=5
Content-Type: application/json

###

### ================================================================
### 다양한 크기로 성능 차이 확인
### ================================================================

### 중간 규모 테스트 (20개)
POST {{baseUrl}}/api/nplus1-test/problem?count=20

###

### 대규모 테스트 (50개) - 주의: 시간이 오래 걸릴 수 있음
POST {{baseUrl}}/api/nplus1-test/problem?count=50

###

### ================================================================
### 추천 테스트 순서
### ================================================================

/**
 * 🎯 권장 테스트 순서:
 * 
 * 1. GET /api/sample-data (데이터 확인)
 * 2. POST /api/nplus1-test/problem?count=5 (N+1 문제 재현)
 * 3. GET /api/nplus1-test/entity-graph (@EntityGraph 최적화)
 * 4. GET /api/nplus1-test/join-fetch (JOIN FETCH 최적화)
 * 5. GET /api/nplus1-test/compare-retrieval (조회 성능 비교)
 * 6. POST /api/nplus1-test/compare-all?count=5 (생성 성능 비교)
 * 
 * 📊 로그에서 확인할 포인트:
 * - 🔍 실행 쿼리 수
 * - ⏱️ 실행 시간
 * - 📈 성능 개선 비율
 * - 🎯 SQL 쿼리 패턴
 * 
 * 예상 결과:
 * - N+1 문제: 30-50개 쿼리
 * - EntityGraph: 1-2개 쿼리
 * - JOIN FETCH: 1개 쿼리
 * - 실행 시간: 크게 단축
 */
