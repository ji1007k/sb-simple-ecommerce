### 실제 비즈니스 API 성능 테스트
### 샘플 데이터 생성 후 실제 조회 성능을 측정하세요

### ================================================================
### 기본 조회 API 테스트 (구현 필요)
### ================================================================

### 1. 상품 목록 조회 (페이징)
### TODO: ProductController에 구현 필요
GET {{baseUrl}}/api/products?page=0&size=20&category=Electronics

###

### 2. 상품 검색 (이름으로)
### TODO: 검색 API 구현 필요
GET {{baseUrl}}/api/products/search?keyword=Premium&page=0&size=10

###

### 3. 특정 상품 조회
### TODO: 상품 상세 API 구현 필요
GET {{baseUrl}}/api/products/1

###

### ================================================================
### 주문 관련 API 테스트 (구현 필요)
### ================================================================

### 4. 주문 목록 조회 (최신순)
### TODO: OrderController에 구현 필요
GET {{baseUrl}}/api/orders?page=0&size=20&sort=createdAt,desc

###

### 5. 특정 고객의 주문 이력
### TODO: 고객별 주문 조회 API 구현 필요
GET {{baseUrl}}/api/customers/customer1@example.com/orders

###

### 6. 주문 상태별 조회
### TODO: 주문 상태 필터링 API 구현 필요
GET {{baseUrl}}/api/orders?status=DELIVERED&page=0&size=20

###

### ================================================================
### 통계/집계 쿼리 테스트 (구현 필요)
### ================================================================

### 7. 카테고리별 상품 수
### TODO: 통계 API 구현 필요
GET {{baseUrl}}/api/statistics/products-by-category

###

### 8. 월별 주문 통계
### TODO: 주문 통계 API 구현 필요
GET {{baseUrl}}/api/statistics/orders-by-month?year=2024

###

### 9. 인기 상품 TOP 10
### TODO: 인기 상품 API 구현 필요
GET {{baseUrl}}/api/statistics/popular-products?limit=10

###

### 10. 고객별 주문 금액 순위
### TODO: 고객 통계 API 구현 필요
GET {{baseUrl}}/api/statistics/top-customers?limit=20

###

### ================================================================
### 복잡한 조인 쿼리 테스트 (구현 필요)
### ================================================================

### 11. 주문과 상품 정보 함께 조회 (N+1 문제 체험용)
### TODO: 주문 상세 API 구현 필요
GET {{baseUrl}}/api/orders/1/details

###

### 12. 특정 기간 매출 분석
### TODO: 매출 분석 API 구현 필요
GET {{baseUrl}}/api/analytics/sales?startDate=2024-01-01&endDate=2024-12-31

###

### ================================================================
### 성능 측정 가이드라인
### ================================================================
### 
### 📊 측정할 지표들:
### 1. 응답시간 (Response Time)
###    - 100ms 이하: 우수
###    - 500ms 이하: 양호  
###    - 1초 이상: 개선 필요
### 
### 2. 처리량 (Throughput)
###    - 동시 요청 처리 능력
###    - 초당 요청 수 (RPS)
### 
### 3. 데이터베이스 성능
###    - 쿼리 실행시간
###    - 인덱스 사용률
###    - 테이블 스캔 여부
### 
### 🎯 튜닝 전후 비교:
### - 인덱스 추가 전후
### - 쿼리 최적화 전후  
### - 페이징 방식 변경 전후
### - 캐시 적용 전후
### ================================================================

### ================================================================
### 튜닝 체크리스트
### ================================================================
### 
### ✅ Phase 1: 인덱스 최적화
### - [ ] products(category) 인덱스 추가
### - [ ] products(name) 인덱스 추가  
### - [ ] orders(created_at) 인덱스 추가
### - [ ] orders(customer_email) 인덱스 추가
### - [ ] order_items(product_id, order_id) 복합 인덱스
### 
### ✅ Phase 2: 쿼리 최적화
### - [ ] N+1 문제 해결 (fetch join)
### - [ ] 페이징 쿼리 최적화
### - [ ] 불필요한 컬럼 조회 제거
### 
### ✅ Phase 3: JPA/Hibernate 최적화
### - [ ] @BatchSize 적용
### - [ ] Lazy Loading 전략 조정
### - [ ] 2차 캐시 적용
### 
### ✅ Phase 4: 애플리케이션 레벨 최적화
### - [ ] Redis 캐시 적용
### - [ ] 읽기 전용 트랜잭션 설정
### - [ ] 커넥션 풀 최적화
### ================================================================
